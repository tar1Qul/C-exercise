#include <stdio.h>
#include <stdlib.h>

#define MAX 10

struct Stack {
    int top;
    int items[MAX];
};

void initStack(struct Stack* s) {
    s->top = -1;
}

int isFull(struct Stack* s) {
    return s->top == MAX - 1;
}

int isEmpty(struct Stack* s) {
    return s->top == -1;
}

void push(struct Stack* s, int item) {
    if (isFull(s)) {
        printf("Stack is full!\n");
    } else {
        s->items[++(s->top)] = item;
    }
}

int pop(struct Stack* s) {
    if (isEmpty(s)) {
        printf("Stack is empty!\n");
        return -1;
    } else {
        return s->items[(s->top)--];
    }
}

void display(struct Stack* s) {
    if (isEmpty(s)) {
        printf("Stack is empty!\n");
    } else {
        printf("Stack elements:\n");
        for (int i = s->top; i >= 0; i--) {
            printf("%d\n", s->items[i]);
        }
    }
}

int main() {
    struct Stack s;
    initStack(&s);
    int element;

    printf("Enter 10 elements to push into the stack:\n\n");
    for (int i = 0; i < MAX; i++) {
        printf("Enter the element no. %d:  ", i + 1);
        scanf("%d", &element);
        push(&s, element);
    }

    printf("\n\nPopping back elements from the stack:\n");
    for (int i = 0; i < MAX; i++) {
        int poppedElement = pop(&s);
        if (poppedElement != -1) {
            printf("%d\n", poppedElement);
        }
    }

    return 0;
}
